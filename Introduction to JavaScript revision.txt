
Introduction to JavaScript

JavaScript (JS) is a high-level, interpreted programming language commonly used for client-side scripting in web pages. It allows for dynamic and interactive web experiences by manipulating the Document Object Model (DOM) and responding to user input.

History and Versions

1995: Originally called LiveScript, JavaScript was created by Brendan Eich at Netscape to add interactivity to web pages.
1997: Standardized as ECMAScript (ECMA-262) by Ecma International, ensuring consistency across browsers.
Ongoing revisions: New features and functionalities are added through regular updates to the ECMAScript specification.


Variables

Variables store data that can be used throughout your code.

Declaration: var, let, or const keywords are used to declare variables.
var (older syntax, less preferred): Allows redeclaration and reassignment within the same scope.
let (introduced in ES6): Limits scope to the block it's declared in, preventing accidental modification.
const (introduced in ES6): Declares a constant value that cannot be changed after assignment.
Example:
 
let name = "Alice";
const PI = 3.14;

Variable Naming Rules

Start with a letter, underscore (_), or dollar sign ($): Variable names cannot begin with numbers.
Contain letters, numbers, underscores, and dollar signs: These characters can be used throughout the name.
Case-sensitive: age and Age are considered different variables.
Cannot be reserved keywords: Words like if, for, function, etc. are used by JavaScript itself and cannot be used as variable names.
  
 
Data Types

JavaScript is dynamically typed, meaning the data type is determined by the value assigned to the variable. Here are the primitive data types:

Number: Represents numeric values (integers, decimals)
String: Represents sequences of characters enclosed in quotes
Boolean: Represents logical values (true or false)
Symbol: A unique and immutable identifier (rarely used)
Null: Represents the intentional absence of a value
Undefined: Represents a variable declared but not assigned a value
Operators

Operators perform calculations or comparisons on values.

Arithmetic Operators: +, -, *, /, % (modulo)
Comparison Operators: ==, !=, ===, !==, <, >, <=, >=
Logical Operators: && (AND), || (OR), ! (NOT)
Assignment Operators: =, +=, -=, *=, /=, etc. (combine assignment with operation)
Other Operators: typeof (check data type), in (check property in object)

Functions

Functions are reusable blocks of code that perform specific tasks.

Definition: Use the function keyword followed by a name, parameters (optional), and the function body enclosed in curly braces {}.
Calling: Use the function name followed by parentheses (), with arguments passed if necessary.
Example:
 
function greet(name) {
  console.log("Hello, " + name + "!");
}

greet("Bob"); // Output: Hello, Bob!
  
 
Loops

Loops allow for repeated execution of code blocks based on a condition.

for loop: Used for a known number of iterations.
while loop: Executes as long as a condition remains true.
do-while loop: Executes at least once, then continues based on a condition.
for...of loop: Iterates over iterable objects (arrays, strings).
for...in loop: Iterates over enumerable properties of an object (less common).
Example (for loop):
 
for (let i = 0; i < 5; i++) {
  console.log(i); // Output: 0, 1, 2, 3, 4
}

while(condition){
//statements
}

do{
//statements
}while(condition);

for(reference in variable){
//statements this loop produces index's
}

for(reference of variable)
{
//variable elements this loop produce a variable elements
}





